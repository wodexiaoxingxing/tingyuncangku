#--------------------------------------------------------------------------------
#------------------------Tingyun Java Agent Config ------------------------------
#--------------------------------------------------------------------------------

# 启用应用探针
# 通过该选项启用或禁用探针
# Default: true.
# agent_enabled=true

# License Key
# 该选项为必填项，与您的听云账号关联。
# 探针采集到得数据，会上传到该 license key绑定的账号下。
# 配置时不保留"<%=>", 如：license_key=1234567890
# license_key=9OgQXob4VGGFFYcm
license_key=c350ad81e02711db371852b0ca3fddfd


# 缺省应用名称
# 必填项，如空缺，探针无法启动
app_name=wjn_app007

#
# Collector地址列表
# 该选项为必填项
# 多个地址以,分割
# 配置时不保留"<%=>", 如：collector.addresses=collector.tingyun.com
#
collector.addresses=10.128.2.29:7667

# 应用自动命名
# 开启该选项，探针会根据应用的Context name、context path自动命名应用
# 但是后台任务(Job、Runnable)数据仍然会被归类到缺省的应用名称下
# auto_app_naming=false

#--------------------------------------------------------------------------------
#-------------------------------- Logger Setting --------------------------------
#--------------------------------------------------------------------------------
# 探针日志文件
# 如果不指定路径，则文件位于tingyun-agent-java.jar同级目录的logs文件夹中
# default:tingyun_agent.log
# agent_log_file_name=tingyun_agent.log

# 探针日志文件保留数量
# default:1
agent_log_file_count=10

# 探针日志文件大小
# 正整数, 可设置单位为K, M, G 如不设置单位，默认为：M
# default:100M
agent_log_file_size=100M

# 探针日志文件详细程度
# 指定输出到探针日志文件中日志信息的详细程度
# 可设置的值包括：off, critical, error, warning, info, debug
# default:info
agent_log_level=info

# 探针是否根据不同应用进程生成不同的日志目录
# default:false
# agent_log_auto_dir.enabled=false

# 可生成的最多目录数
# default:100
# agent_log_auto_dir.size=100
#--------------------------------------------------------------------------------

#--------------------------------------------------------------------------------
#-------------------------------- Security Setting ------------------------------
#--------------------------------------------------------------------------------
# 数据审计模式
# 该选项确定是否启用数据审计模式。启用数据审计模式后，所有从数据采集服务接收到和提交到数据采集
# 服务的原始数据都会被记录到探针本地日志文件中
# default:false
# audit_mode=false

# 使用HTTPS传输数据
# 当设置为true是，探针以HTTPS接收和发送数据
# default: false
# ssl=false

# 热点方法采集
# 当设置为true是，探针开启热点方法数据的采集
# default:false
# hotspot.enabled=false
#--------------------------------------------------------------------------------

#--------------------------------------------------------------------------------
#-------------------------------- Proxy Setting ---------------------------------
#---------------------------- 适用于无公网IP的服务器 -------------------------------
#--------------------------------------------------------------------------------
# 代理服务器主机
# 如果需要通过代理服务器连接，在此设置代理服务器主机
# proxy_host=

# 代理服务器端口
# 如果需要通过代理服务器连接，在此设置代理服务器端口，若设置代理服务器，则端口必填
# proxy_port=

# 代理服务器用户名
# 如果需要通过代理服务器连接，在此设置代理服务器用户名
# proxy_user=

# 代理服务器密码
# 如果需要通过代理服务器连接，在此设置代理服务器密码
# proxy_password=
#--------------------------------------------------------------------------------

#--------------------------------------------------------------------------------
#---------------------- Transaction Analyze(跨应用分析) ---------------------------
#--------------------------------------------------------------------------------
# 是否启用跨应用追踪
# 启用该选项后，听云可以自动关联应用之间的调用拓扑
# default:true
transaction_tracer.enabled=true
#--------------------------------------------------------------------------------

#--------------------------------------------------------------------------------
#---------------------- User Info(用户溯源) -----------------------------------
#--------------------------------------------------------------------------------
#
# 是否开启追踪用户溯源
# 关闭该选项后，用户信息将不从Request post参数中获取。其他获取方式不受影响
# default: true
# user_info.enabled_post_param=true
#--------------------------------------------------------------------------------

#--------------------------------------------------------------------------------
#-------------------------------- Plugin Setting --------------------------------
#---------------------------- Enable/Disable plugins ----------------------------
#--------------------------------------------------------------------------------
# tingyun-spring-aop-plugin, 用来采集Spring AOP matched方法的性能
class_transformer.tingyun-spring-aop-plugin.enabled=false

# tingyun-spring-annotation-plugin-2.5 ,用来采集被 @Service @Component 注解的类中方法的性能
class_transformer.tingyun-spring-annotation-plugin-2.5.enabled=false

# 日志追溯相关Plugin，开启后可以在应用的日志中，打印听云相关数据，如事务ID、追踪ID等.
class_transformer.tingyun-log4j-plugin-2.0.0.enabled=false
class_transformer.tingyun-log4j-plugin-2.3.enabled=false
class_transformer.tingyun-log4j-plugin-1.2.enabled=false
class_transformer.tingyun-logback-plugin-1.2.enabled=false

# 异步plugin嵌码白名单，谨慎配置
# 可设置为实现了Runnable，Callable接口的类，对Thread的子类进行嵌码需谨慎
# 目前支持两种配置方式，限定名 和 正则表达式
# 1.限定名， 例如，类名为 com/tingyun/test/TestRunnable ，可以配置为 com/tingyun/test，意思为com/tingyun/test下面的所有实现了Runnable和Callable接口的类进行嵌码
# 2.正则表达式， 必须以^开头，例如，com/tingyun/test/TestRunnable ，可以配置为 ^.*TestRunnable,表示匹配所有以TestRunnable结尾的java类
# class_transformer.tingyun-thread-plugin.white_list=com/tingyun/test

# 默认禁用Netty相关插件，如有Netty作为容器使用的场景，启用如下配置并将false改为true
# class_transformer.tingyun-netty-plugin-3.4.enabled=false
# class_transformer.tingyun-netty-plugin-3.8.enabled=false
# class_transformer.tingyun-netty-plugin-4.0.0.enabled=false
# class_transformer.tingyun-netty-plugin-4.0.8.enabled=false

# 屏蔽对指定的class的嵌码，多个匹配用逗号隔开
# 默认匹配方式为 equals，如果需要以正则匹配需要以 ^ 开头
# 格式：com/xxx
# class_transformer.excludes=

# 屏蔽所属ClassLoader的class，多个匹配以逗号隔开
# 匹配方式为 startsWith
# 格式：com.xxx.XXClassLoader
# class_transformer.classloader_excludes=

# 屏蔽对指定ClassLoader的嵌码，在有些容器下需要做相应的ClassLoader嵌码屏蔽才能启动，已知需要屏蔽的场景：
# Resin 4，需要屏蔽: com/caucho/loader/DynamicClassLoader
# IBM Jdk, 需要屏蔽: java/net/URLClassLoader
# WebLogic 12，需要屏蔽: com/oracle/classloader/weblogic/LaunchClassLoader, com/oracle/classloader/PolicyClassLoader
# class_transformer.classloader_delegation_excludes=
#--------------------------------------------------------------------------------

#--------------------------------------------------------------------------------
#-------------------------------- Other Setting ---------------------------------
#--------------------------------------------------------------------------------
# Segment(Traced method or Code snippet)超时时间, 如执行时间（Duration）超过该值，则结
# 束该egment，以当前时间作为Segment结束时间，计算性能指标，该Segment的metric name会
# 以“Truncate”做为前缀.
# default:600 (单位：秒)
# segment_timeout=600

# 异步调用超时时间, 如执异步调用的时间超过该值，则不记录异步调用性能
# default:180 (单位：秒)
# async_timeout=180

# Action 缓冲池个数，该值需要根据被监控应用的TPS来计算。
# default: 4
# action_buffer_size=4

# Action 缓冲池大小，该值需要根据被监控应用的TPS来计算。
# 注意：该值必须为2的N次幂
# default: 128
# action_buffer_length=128

# Action 消费线程数，该值需要根据被监控应用的TPS来计算。
# default: 2
# action_consumer_thread_count=2

# 在环境中dns有问题时，查找域名会导致阻塞等待，使JDBCTemplate执行时间计算错误。
# 可将 action_tracer.use_hostname 配置设为false，关闭查找，直接用ip替代。
# default: false
# action_tracer.use_hostname=false

# Jar包中class信息采集（用于自定义嵌码）中需要屏蔽的class包名，多个包名用逗号隔开
# 默认匹配方式为 startsWith，如果需要以正则匹配需要以 ^ 开头
# 格式：com/xxx
# classloaded.packages_exclude=

# Jar包中class信息采集（用于自定义嵌码），采集周期内最大缓存数
# default: 5000
# jar_classes.max_cache_size=5000

# Jar包中class信息的采集周期
# default: 30 (单位：秒)
# jar_collector.period_seconds=30

# 单条sql语句最大长度，超出后进行裁剪，并在末尾补充({0} more chars)，{0}表示多少字符被截断
# default: 2000
# action_tracer.insert_sql_max_length=2000
#--------------------------------------------------------------------------------

